# Sports Events - Proyecto Django

##  Public Repository

[https://github.com/DiegoMartinezDeSanjuan/SportsEvents]

##  Team Members

- Diego Martínez De Sanjuan
- Alex Abashin
- Sergi Pelegrí Buitrago

##  Design Decisions

- The data model includes 3 main entities: `SportsEvent`, `Team` and `Athlete`.
- Complex relations were modeled as follows:
  - `SportsEvent <--> Team`: ManyToMany relation.
  - `SportsEvent <--> Athlete`: ManyToMany relation.
  - `Team --> Athlete`: OneToMany relation using ForeignKey.
- Function-based and templates were used to display lists and details of the data.
- A home page was created with navigation between entity lists.
- Views were protected using `@login_required` to ensure that only authenticated user can access the data.
- `UserCreationForm` was used for user registration, and login/logout functionality was enabled.

##  Docker

- Includes `Dockerfile` and `docker-compose.yml`.
- The project can be launched with `docker-compose up --build`.

##  Authentication

- User registration via a custom form.
- Automatic redirection to login if the user is not authenticated.
- Redirection to the home page after logging in.

## ️ Hom to Run the Project

### Requirements

- Docker and docker-compose isntalled

### Steps

```bash
# Clone the repository
git clone https://github.com/DiegoMartinezDeSanjuan/SportsEvents.git
cd SportsEvents

# Build and run the project
docker-compose up --build
#Access the aplication at http://localhost:8000

## Grade Distribution

All members contributed equally to the development of the project.
It is proposed that all receive the same grade.
